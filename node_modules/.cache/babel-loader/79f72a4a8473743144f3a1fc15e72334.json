{"ast":null,"code":"var _jsxFileName = \"/home/johnvonmuhlen/projects/notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar today = new Date();\n\nconst App = () => {\n  _s();\n\n  const [notes, setState] = useState([{\n    id: nanoid(),\n    text: \"hello\",\n    time: \"12/01/02\"\n  }, {\n    id: nanoid(),\n    text: \"bye\",\n    time: \"12/00/01\"\n  }, {\n    id: nanoid(),\n    text: \"3rd note\",\n    time: \"12/00/01\"\n  }, {\n    id: nanoid(),\n    text: \"4th note\",\n    time: \"12/04/01\"\n  }]);\n\n  const addNote = text => {\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      time: today.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setState(newNotes);\n  };\n\n  const deleteNote = id => {\n    for (var i = 0; i < notes.length; i++) {\n      if (notes[i] === id) {\n        arr.splice(i, 1);\n        i--;\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      id: \"nav\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Notes \", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"span\",\n          children: \"By John von Muhlen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      class: \"form-control\",\n      type: \"text\",\n      placeholder: \"Search Notes...\",\n      \"aria-label\": \"default input example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n      notes: notes,\n      handleAddNote: addNote,\n      deleteNote: deleteNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"i0Ji79JExRRCF91SfT98KXnzEFI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","nanoid","NotesList","today","Date","App","notes","setState","id","text","time","addNote","newNote","toLocaleDateString","newNotes","deleteNote","i","length","arr","splice"],"sources":["/home/johnvonmuhlen/projects/notes/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\n\nvar today = new Date();\n\nconst App = () => {\n  const [notes, setState] = useState([\n    {\n      id: nanoid(),\n      text: \"hello\",\n      time: \"12/01/02\",\n    },\n    {\n      id: nanoid(),\n      text: \"bye\",\n      time: \"12/00/01\",\n    },\n    {\n      id: nanoid(),\n      text: \"3rd note\",\n      time: \"12/00/01\",\n    },\n    {\n      id: nanoid(),\n      text: \"4th note\",\n      time: \"12/04/01\",\n    },\n  ]);\n\n  const addNote = (text) => {\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      time: today.toLocaleDateString(),\n    };\n\n    const newNotes = [...notes, newNote];\n    setState(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    for (var i = 0; i < notes.length; i++) {\n      if (notes[i] === id) {\n        arr.splice(i, 1);\n        i--;\n      }\n    }\n  };\n\n  return (\n    <div>\n      <nav id=\"nav\">\n        <h1>\n          Notes <span id=\"span\">By John von Muhlen</span>\n        </h1>\n      </nav>\n      <input\n        class=\"form-control\"\n        type=\"text\"\n        placeholder=\"Search Notes...\"\n        aria-label=\"default input example\"\n      ></input>\n      <NotesList\n        notes={notes}\n        handleAddNote={addNote}\n        deleteNote={deleteNote}\n      />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CACjC;IACEQ,EAAE,EAAEP,MAAM,EADZ;IAEEQ,IAAI,EAAE,OAFR;IAGEC,IAAI,EAAE;EAHR,CADiC,EAMjC;IACEF,EAAE,EAAEP,MAAM,EADZ;IAEEQ,IAAI,EAAE,KAFR;IAGEC,IAAI,EAAE;EAHR,CANiC,EAWjC;IACEF,EAAE,EAAEP,MAAM,EADZ;IAEEQ,IAAI,EAAE,UAFR;IAGEC,IAAI,EAAE;EAHR,CAXiC,EAgBjC;IACEF,EAAE,EAAEP,MAAM,EADZ;IAEEQ,IAAI,EAAE,UAFR;IAGEC,IAAI,EAAE;EAHR,CAhBiC,CAAD,CAAlC;;EAuBA,MAAMC,OAAO,GAAIF,IAAD,IAAU;IACxB,MAAMG,OAAO,GAAG;MACdJ,EAAE,EAAEP,MAAM,EADI;MAEdQ,IAAI,EAAEA,IAFQ;MAGdC,IAAI,EAAEP,KAAK,CAACU,kBAAN;IAHQ,CAAhB;IAMA,MAAMC,QAAQ,GAAG,CAAC,GAAGR,KAAJ,EAAWM,OAAX,CAAjB;IACAL,QAAQ,CAACO,QAAD,CAAR;EACD,CATD;;EAWA,MAAMC,UAAU,GAAIP,EAAD,IAAQ;IACzB,KAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACW,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,IAAIV,KAAK,CAACU,CAAD,CAAL,KAAaR,EAAjB,EAAqB;QACnBU,GAAG,CAACC,MAAJ,CAAWH,CAAX,EAAc,CAAd;QACAA,CAAC;MACF;IACF;EACF,CAPD;;EASA,oBACE;IAAA,wBACE;MAAK,EAAE,EAAC,KAAR;MAAA,uBACE;QAAA,kCACQ;UAAM,EAAE,EAAC,MAAT;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADR;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MACE,KAAK,EAAC,cADR;MAEE,IAAI,EAAC,MAFP;MAGE,WAAW,EAAC,iBAHd;MAIE,cAAW;IAJb;MAAA;MAAA;MAAA;IAAA,QANF,eAYE,QAAC,SAAD;MACE,KAAK,EAAEV,KADT;MAEE,aAAa,EAAEK,OAFjB;MAGE,UAAU,EAAEI;IAHd;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CAhED;;GAAMV,G;;KAAAA,G;AAkEN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}