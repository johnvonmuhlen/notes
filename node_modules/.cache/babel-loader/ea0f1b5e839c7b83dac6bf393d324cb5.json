{"ast":null,"code":"var _jsxFileName = \"/home/johnvonmuhlen/projects/notes/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar today = new Date();\n\nconst App = () => {\n  _s();\n\n  const [notes, setState] = useState([{\n    id: nanoid(),\n    text: \"Sample Note\",\n    time: today.toLocaleDateString()\n  }]);\n\n  const addNote = text => {\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      time: today.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setState(newNotes);\n  };\n\n  const deleteNote = id => {\n    const filteredNotes = notes.filter(note => note.id !== id);\n    setState(filteredNotes);\n  };\n\n  const [searchText, setSearchState] = useState(\"\");\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"notes-app-data\"));\n    console.log(savedNotes);\n\n    if (savedNotes) {\n      setState(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Search, {\n        search: setSearchState\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => {\n          return note.text.toLowerCase().includes(searchText);\n        }),\n        handleAddNote: addNote,\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"M3QoIMThH8hvCGtZ8+3lTukzRew=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","nanoid","NotesList","Search","Header","today","Date","App","notes","setState","id","text","time","toLocaleDateString","addNote","newNote","newNotes","deleteNote","filteredNotes","filter","note","searchText","setSearchState","savedNotes","JSON","parse","localStorage","getItem","console","log","setItem","stringify","toLowerCase","includes"],"sources":["/home/johnvonmuhlen/projects/notes/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\n\nvar today = new Date();\n\nconst App = () => {\n  const [notes, setState] = useState([\n    {\n      id: nanoid(),\n      text: \"Sample Note\",\n      time: today.toLocaleDateString(),\n    },\n  ]);\n\n  const addNote = (text) => {\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      time: today.toLocaleDateString(),\n    };\n\n    const newNotes = [...notes, newNote];\n    setState(newNotes);\n  };\n\n  const deleteNote = (id) => {\n    const filteredNotes = notes.filter((note) => note.id !== id);\n    setState(filteredNotes);\n  };\n\n  const [searchText, setSearchState] = useState(\"\");\n\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem(\"notes-app-data\"));\n    console.log(savedNotes);\n\n    if (savedNotes) {\n      setState(savedNotes);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes-app-data\", JSON.stringify(notes));\n  }, [notes]);\n\n  return (\n    <div>\n      <Header />\n      <div id=\"container\">\n        <Search search={setSearchState} />\n        <NotesList\n          notes={notes.filter((note) => {\n            return note.text.toLowerCase().includes(searchText);\n          })}\n          handleAddNote={addNote}\n          deleteNote={deleteNote}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,IAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CACjC;IACEW,EAAE,EAAET,MAAM,EADZ;IAEEU,IAAI,EAAE,aAFR;IAGEC,IAAI,EAAEP,KAAK,CAACQ,kBAAN;EAHR,CADiC,CAAD,CAAlC;;EAQA,MAAMC,OAAO,GAAIH,IAAD,IAAU;IACxB,MAAMI,OAAO,GAAG;MACdL,EAAE,EAAET,MAAM,EADI;MAEdU,IAAI,EAAEA,IAFQ;MAGdC,IAAI,EAAEP,KAAK,CAACQ,kBAAN;IAHQ,CAAhB;IAMA,MAAMG,QAAQ,GAAG,CAAC,GAAGR,KAAJ,EAAWO,OAAX,CAAjB;IACAN,QAAQ,CAACO,QAAD,CAAR;EACD,CATD;;EAWA,MAAMC,UAAU,GAAIP,EAAD,IAAQ;IACzB,MAAMQ,aAAa,GAAGV,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYA,EAAnC,CAAtB;IACAD,QAAQ,CAACS,aAAD,CAAR;EACD,CAHD;;EAKA,MAAM,CAACG,UAAD,EAAaC,cAAb,IAA+BvB,QAAQ,CAAC,EAAD,CAA7C;EAEAC,SAAS,CAAC,MAAM;IACd,MAAMuB,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,gBAArB,CAAX,CAAnB;IACAC,OAAO,CAACC,GAAR,CAAYN,UAAZ;;IAEA,IAAIA,UAAJ,EAAgB;MACdd,QAAQ,CAACc,UAAD,CAAR;IACD;EACF,CAPQ,EAON,EAPM,CAAT;EASAvB,SAAS,CAAC,MAAM;IACd0B,YAAY,CAACI,OAAb,CAAqB,gBAArB,EAAuCN,IAAI,CAACO,SAAL,CAAevB,KAAf,CAAvC;EACD,CAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;EAIA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,EAAE,EAAC,WAAR;MAAA,wBACE,QAAC,MAAD;QAAQ,MAAM,EAAEc;MAAhB;QAAA;QAAA;QAAA;MAAA,QADF,eAEE,QAAC,SAAD;QACE,KAAK,EAAEd,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAU;UAC5B,OAAOA,IAAI,CAACT,IAAL,CAAUqB,WAAV,GAAwBC,QAAxB,CAAiCZ,UAAjC,CAAP;QACD,CAFM,CADT;QAIE,aAAa,EAAEP,OAJjB;QAKE,UAAU,EAAEG;MALd;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CAvDD;;GAAMV,G;;KAAAA,G;AAyDN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}